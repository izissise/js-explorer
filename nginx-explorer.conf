
# a file download will not end with a '/'
# so here we make sure we only replace '<html>'
# for actual file listing
map $uri $cond_filter {
    ~/$ "<!DOCTYPE html><html><script name='NgxEx' favicon='🗃️' upload='/_ngx_expl/upload/' upload-max-size='209715200' icons='/_ngx_expl/icons/' src='/_ngx_expl/main.js'></script>";
    default "<html>";
}

# some options from https://github.com/h5bp/server-configs-nginx/tree/main
gzip on;
gzip_comp_level 5;
gzip_min_length 256;
gzip_proxied any;
gzip_vary on;
gzip_types text/javascript text/plain application/javascript  application/x-javascript

open_file_cache max=1000 inactive=20s;
open_file_cache_valid 30s;
open_file_cache_min_uses 2;
open_file_cache_errors on;

charset UTF-8;
charset_types text/css text/plain text/vnd.wap.wml text/javascript text/markdown application/json application/manifest+json;

# include mime.types;
types {
    video/x-matroska mkv;
}

add_header X-Content-Type-Options nosniff always;
add_header X-Frame-Options SAMEORIGIN always;
server_tokens off;

server {
    # Listen on http port
    listen 8080;

    # Serve files listing
    location / {
        # Path to serve
        root /home/user/downloads;


        sub_filter_once on;
        sub_filter "<html>" $cond_filter;

        # Random id so nginx doesn't serve random html files
        # that browsers would render, you can remove this line
        # if you want directories with index.html to be rendered
        index 953b12d3-5ab2-49ad-8f49-6ea27f3a9994;

        # auth_basic           "Access files";
        # auth_basic_user_file /basic_auth/download.htpasswd;

        # File listing (index) in html format
        autoindex on;
        autoindex_format html;
        autoindex_exact_size on;

        # Perf tuning
        sendfile           on;
        sendfile_max_chunk 2m;
        tcp_nopush         on;
        tcp_nodelay        on;
        keepalive_timeout  65;

    }

    # this is where app files (main.js, icons) are
    # drawback is that a folder named '_ngx_expl' cannot be listed
    location ^~ /_ngx_expl/ {
        alias /var/www/ngx_expl/;

        # Perf tuning
        sendfile           on;
        sendfile_max_chunk 2m;
        tcp_nopush         on;
        tcp_nodelay        on;
        keepalive_timeout  65;
    }

    # Upload location
    location ^~ /_ngx_expl/upload/ {
        limit_except GET POST {
            deny all;
        }

        # Where to store the files on disk
        client_body_temp_path      /home/user/uploads/;
        # Store the file on disk, and don't delete it, no matter
        # what the proxy returns.
        client_body_in_file_only   on;
        client_body_buffer_size    16m;
        client_max_body_size       256m;
        # Give the client 2h to upload.
        client_body_timeout        2h;

        # Now proxy to the small internal server we started
        # below, and don't pass the uploaded file to it.
        proxy_set_body             off;
        proxy_pass                 http://127.0.0.1:4000/$request_method;


        auth_basic           "Upload files";
        auth_delay           1s;
        auth_basic_user_file /basic_auth/upload.htpasswd;
    }
}

# Dummy server that return 200 to finish files upload
server {
    listen 127.0.0.1:4000;

    location /POST {
        return 204;
    }

    location /GET {
        return 200;
    }
}
