# Credits:
# - https://github.com/h5bp/server-configs-nginx/tree/main
# - https://gist.github.com/eatnumber1/92e94086dafc7194077df4a6b45b2b75

# Config
map "" $ngxp_endpoint {
    default ___ngxp;
}
map "" $ngxp_html_header {
    default "<!DOCTYPE html><html><link rel='shortcut icon' href='data:;base64,=' /><link rel='stylesheet' href='/$ngxp_endpoint/main.css' /><script name='NgxEx' favicon='🗃️' date-format='' role='$user_role' login='/$ngxp_endpoint/login' logout='/$ngxp_endpoint/logout' upload='/$ngxp_endpoint/upload/' upload-max-size='209715200' icons='/$ngxp_endpoint/icons/' src='/$ngxp_endpoint/main.js'></script>";
}
# Auth roles
map $remote_user $user_role {
    download "download";
    upload "upload";
    admin "all";
    default "";
}

# geo $mysite_geo {
#   192.168.0.0/24 "yes"; #some network which should have access
#   10.10.10.0/24  "yes"; #some other network which should have access
#   default        "no";
# }

# gzip
gzip on;
gzip_comp_level 5;
gzip_min_length 256;
gzip_proxied any;
gzip_vary on;
gzip_types text/javascript text/plain application/javascript application/x-javascript;

# pref file send
open_file_cache max=1000 inactive=20s;
open_file_cache_valid 30s;
open_file_cache_min_uses 2;
open_file_cache_errors on;

sendfile           on;
sendfile_max_chunk 2m;
tcp_nopush         on;
tcp_nodelay        on;
keepalive_timeout  65;

# Headers CORS
add_header Access-Control-Allow-Origin *;
add_header Access-Control-Allow-Methods *;
add_header Access-Control-Expose-Headers 'Content-Length';
add_header Access-Control-Expose-Headers 'Content-Disposition';
add_header X-Content-Type-Options nosniff always;
add_header X-Frame-Options SAMEORIGIN always;
charset UTF-8;
charset_types text/css text/plain text/vnd.wap.wml text/javascript text/markdown application/json application/manifest+json;
server_tokens off;

# sub_filter "<html>" $cond_filter;
map $uri $cond_filter {
    ~/$ $ngxp_html_header; # directory listing
    default "<html>"; # file
}

server {
    listen 8080;

    location / {
        root /home/user/downloads; # <--- path to serve

        # Auth
        # if ($cookie_nginx_explorer = $sca_token) {
        #     set $sca_auth_passed "yes";
        #     return
        # }

        # Random id so nginx do not redirect / to index.html
        # remove if you want directories with index.html to be rendered
        index 953b12d3-5ab2-49ad-8f49-6ea27f3a9994;

        # File listing (index) in html format
        autoindex on;
        autoindex_format html;
        autoindex_exact_size on;

        sub_filter_once on;
        sub_filter "<html>" $cond_filter;
    }

    # prevent basic auth browser prompt (error_page 401 = @unprompt;)
    location @unprompt {
        types { } default_type "text/html; charset=utf-8";
        return 403 $ngxp_html_header;
    }

    # this is where app files (main.js, icons) are,
    # drawback is that a folder named '___ngxp' cannot be indexed
    location ^~ /___ngxp/ {
        alias /var/www/ngxp/;

        location ^~ /___ngxp/login { # login
            limit_except POST { deny all; }
            auth_basic "Login";
            auth_delay 1s;
            auth_basic_user_file /basic_auth/download.htpasswd;
            add_header Set-Cookie "ngxp=secret; max-age=15552000; path=/; SameSite=Lax; Secure; HttpOnly";
            error_page 401 = @unprompt;
            return 200 "logged in";
        }
        location ^~ /___ngxp/logout { # logout
            limit_except POST { deny all; }
            add_header Set-Cookie "ngxp=; Max-Age=0; path=/; SameSite=Lax; Secure; HttpOnly";
            return 201; # cookie removed
        }
    }


    # Upload endpoint, remove to disable upload
    location ^~ /___ngxp/upload/ {
        limit_except GET POST { deny all; }

        # Where to store the files on disk
        client_body_temp_path      /home/user/uploads/;
        # Store the file on disk, and don't delete it, no matter
        # what the proxy returns.
        client_body_in_file_only   on;
        client_body_buffer_size    16m;
        client_max_body_size       256m;
        # Give the client 2h to upload.
        client_body_timeout        2h;

        # Now proxy to the small internal server we started
        # below, and don't pass the uploaded file to it.
        proxy_set_body             off;
        proxy_pass                 http://127.0.0.1:4000/$request_method;
    }
}

# Upload dummy server that return 200 to finish files upload
# Remove to disable upload
server {
    listen 127.0.0.1:4000;
    location /POST { return 204; }
    location /GET { return 200; }
}
