# Credits:
# - https://github.com/h5bp/server-configs-nginx/tree/main
# - https://gist.github.com/eatnumber1/92e94086dafc7194077df4a6b45b2b75

# Config
map "" $serve_path {
    default /home/user/downloads; # mounted docker volume
}
map "" $app_path {
    default /var/www/ngxp/; # mounted docker volume
}
map "" $ngxp_html_header {
    default "<!DOCTYPE html><html><link rel='shortcut icon' href='data:;base64,=' /><link rel='stylesheet' href='/___ngxp/main.css' /><script name='NgxEx' favicon='🗃️' date-format='' user='$username' login='/___ngxp/login' logout='/___ngxp/logout' upload='/___ngxp/upload/' upload-max-size='209715200' icons='/___ngxp/icons/' src='/___ngxp/main.js'></script>";
}
geo $local_peer { # local network addresses
    fe80::/10      "local_anon";
    ::1/128        "local_anon";
    127.0.0.1/32   "local_anon";
    192.168.0.0/16 "local_anon";
    10.0.0.0/8     "local_anon";
    default        "wan_anon";
}
map $mapper_user $username { # request username
    ~^.+$ $mapper_user;
    default $local_peer; # use ip name when empty
}
map $mapper_uri_access:$uri $access_ok { # request uri access
    ~^([^:]+):\1.*$ 1;
    default         0;
}
# TODO define access (can include basic auth file?)
# cookie check ->
# (set $mapper_user $cookier[0]; if ($cookie != $user_cookie) { return 401; })
map $username $user_cookie { # map basic auth users to access and a secret
    default "";
    include /basic_auth/accessuri.map;
}

# gzip
gzip on;
gzip_comp_level 5;
gzip_min_length 256;
gzip_proxied any;
gzip_vary on;
gzip_types text/javascript text/plain application/javascript application/x-javascript;

# pref file send
open_file_cache max=1000 inactive=20s;
open_file_cache_valid 30s;
open_file_cache_min_uses 2;
open_file_cache_errors on;
sendfile           on;
sendfile_max_chunk 2m;
tcp_nopush         on;
tcp_nodelay        on;
keepalive_timeout  65;

# Headers CORS
add_header Access-Control-Allow-Origin *;
add_header Access-Control-Allow-Methods *;
add_header Access-Control-Expose-Headers 'Content-Length';
add_header Access-Control-Expose-Headers 'Content-Disposition';
add_header X-Content-Type-Options nosniff always;
add_header X-Frame-Options SAMEORIGIN always;
charset UTF-8;
charset_types text/css text/plain text/vnd.wap.wml text/javascript text/markdown application/json application/manifest+json;
server_tokens off;

# sub_filter "<html>" $cond_filter;
map $uri $cond_filter {
    ~/$ $ngxp_html_header; # directory listing
    default "<html>"; # file
}

server {
    listen 8080;

    # prevent basic auth browser prompt (error_page 401 = @unprompt;)
    location @unprompt {
        types { } default_type "text/html; charset=utf-8";
        return 403 $ngxp_html_header;
    }
    error_page 401 = @unprompt;

    # this is where app files (main.js, icons) are,
    # drawback is that a folder named '___ngxp' cannot be indexed
    location ^~ /___ngxp/ {
        alias $app_path;
        location ^~ /___ngxp/login { # login
            limit_except POST { deny all; }
            auth_basic "Login";
            auth_delay 1s;
            auth_basic_user_file /basic_auth/basic.htpasswd;
            set $mapper_user $remote_user;
            add_header Set-Cookie "ngxp=$user_cookie; max-age=15552000; path=/; SameSite=Lax; Secure; HttpOnly";
            return 200 "logged in";
        }
        location ^~ /___ngxp/logout { # logout
            limit_except POST { deny all; }
            add_header Set-Cookie "ngxp=; Max-Age=0; path=/; SameSite=Lax; Secure; HttpOnly";
            return 201; # cookie removed
        }
    }

    location / { # file listing and download
        root $serve_path;

        if ($cookie_ngxp ~ "^([^:]+):(?<mapper_user>[^:]+):(?<mapper_uri_access>[^:]+)") {}
        if ($user_cookie = "")            { return 401; }
        if ($cookie_ngxp != $user_cookie) { return 401; }
        if ($access_ok = 0)               { return 401; }

        # Random id so nginx do not redirect / to index.html
        # remove if you want directories with index.html to be rendered
        index 953b12d3-5ab2-49ad-8f49-6ea27f3a9994;
        # File listing (index) in html format
        autoindex on;
        autoindex_format html;
        autoindex_exact_size on;

        sub_filter_once on;
        sub_filter "<html>" $cond_filter;
    }
    # upload endpoint, remove to disable upload
    location ^~ /___ngxp/upload/ {
        limit_except GET POST { deny all; }

        if ($cookie_ngxp ~ "^([^:]+):(?<mapper_user>[^:]+):(?<mapper_uri_access>[^:]+)") {}
        if ($user_cookie = "")            { return 401; }
        if ($cookie_ngxp != $user_cookie) { return 401; }
        if ($access_ok = 0)               { return 401; }

        client_body_temp_path      /home/user/uploads/; # upload path
        client_body_in_file_only   on; # store on disk
        client_body_buffer_size    16m;
        client_max_body_size       256m;
        client_body_timeout        2h;
        proxy_set_body             off; # do not send file to proxy
        proxy_pass                 http://127.0.0.1:4000/$request_method;
    }
}

# Upload dummy server that return 200 to finish files upload
# Remove to disable upload
server {
    listen 127.0.0.1:4000;
    location /POST { return 204; }
    location /GET  { return 200; }
}
